{
    "buildhost_description": {
        "id": "lab002c28",
        "os": "Linux 2.6.32-754.2.1.el6.x86_64 x86_64\n\"CentOS release 6.10 (Final)\"\n",
        "compiler_version": "g++ (GCC) 6.2.0",
        "debugger_version": "GNU gdb (GDB) 7.12",
        "profiler_version": "valgrind-3.12.0"
    },
    "status": 4,
    "compile_result": {
        "status": 1,
        "output": "main.cpp: In member function ‘void Vector::Print(char, double) const’:\nmain.cpp:72:20: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n         if(eps == -1) {\n                    ^\nmain.cpp: In member function ‘Vector& Vector::operator/=(double)’:\nmain.cpp:114:17: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n         if(s == 0) throw std::domain_error(\"Division by zero\");\n                 ^\nmain.cpp: In function ‘void PrintVector(const Vector&, char, double)’:\nmain.cpp:144:16: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(eps == -1) {\n                ^\nmain.cpp: In function ‘Vector operator/(const Vector&, double)’:\nmain.cpp:198:13: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(s == 0) throw std::domain_error(\"Division by zero\");\n             ^\nmain.cpp: In constructor ‘Matrix::Matrix(std::initializer_list<std::vector<double> >)’:\nmain.cpp:231:26: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]\n         if(l.size() == 1 && kvel == 0 || l.size() == 0) throw std::range_error(\"Bad dimension\");\n            ~~~~~~~~~~~~~~^~~~~~~~~~~~\nmain.cpp: In member function ‘void Matrix::Print(int, double) const’:\nmain.cpp:284:20: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n         if(eps == -1) {\n                    ^\nmain.cpp: In function ‘void PrintMatrix(const Matrix&, int, double)’:\nmain.cpp:412:16: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(eps == -1) {\n                ^\nmain.cpp: In function ‘double Det(Matrix)’:\nmain.cpp:607:17: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n         if(p != k){\n                 ^\nmain.cpp: In member function ‘double Matrix::Det() const’:\nmain.cpp:631:17: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n         if(p != k){\n                 ^\nmain.cpp: In constructor ‘LUDecomposer::LUDecomposer(Matrix)’:\nmain.cpp:749:10: warning: ‘LUDecomposer::m’ will be initialized after [-Wreorder]\n   Matrix m;\n          ^\nmain.cpp:748:10: warning:   ‘Vector LUDecomposer::w’ [-Wreorder]\n   Vector w;\n          ^\nmain.cpp:751:3: warning:   when initialized here [-Wreorder]\n   LUDecomposer(Matrix m1): m(m1), w(m1.NRows()){\n   ^~~~~~~~~~~~\nmain.cpp: In member function ‘void Matrix::ReduceToRREF()’:\nmain.cpp:710:32: warning: ‘p’ may be used uninitialized in this function [-Wmaybe-uninitialized]\n         if(p != k) SwapRow(p,k);\n                                ^",
        "parsed_output": [
            {
                "type": "warning",
                "file": "main.cpp",
                "line": "72",
                "col": "20",
                "message": "comparing floating point with == or != is unsafe",
                "output": "/tmp/buildservice/bs_7089/main.cpp:72:20: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]         if(eps == -1) {                    ^/tmp/buildservice/bs_7089/main.cpp: In member function ‘Vector& Vector::operator/=(double)’:",
                "code": "if(eps == -1) {"
            },
            {
                "type": "warning",
                "file": "main.cpp",
                "line": "114",
                "col": "17",
                "message": "comparing floating point with == or != is unsafe",
                "output": "/tmp/buildservice/bs_7089/main.cpp:114:17: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]         if(s == 0) throw std::domain_error(\"Division by zero\");                 ^",
                "code": "if(s == 0) throw std::domain_error(\"Division by zero\");"
            },
            {
                "type": "warning",
                "file": "main.cpp",
                "line": "144",
                "col": "16",
                "message": "comparing floating point with == or != is unsafe",
                "output": "/tmp/buildservice/bs_7089/main.cpp:144:16: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]     if(eps == -1) {                ^",
                "code": "if(eps == -1) {"
            },
            {
                "type": "warning",
                "file": "main.cpp",
                "line": "198",
                "col": "13",
                "message": "comparing floating point with == or != is unsafe",
                "output": "/tmp/buildservice/bs_7089/main.cpp:198:13: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]     if(s == 0) throw std::domain_error(\"Division by zero\");             ^/tmp/buildservice/bs_7089/main.cpp: In constructor ‘Matrix::Matrix(std::initializer_list<std::vector<double> >)’:",
                "code": "if(s == 0) throw std::domain_error(\"Division by zero\");"
            },
            {
                "type": "warning",
                "file": "main.cpp",
                "line": "231",
                "col": "26",
                "message": "suggest parentheses around '&&' within '||'",
                "output": "/tmp/buildservice/bs_7089/main.cpp:231:26: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]         if(l.size() == 1 && kvel == 0 || l.size() == 0) throw std::range_error(\"Bad dimension\");            ~~~~~~~~~~~~~~^~~~~~~~~~~~/tmp/buildservice/bs_7089/main.cpp: In member function ‘void Matrix::Print(int, double) const’:",
                "code": "if(l.size() == 1 && kvel == 0 || l.size() == 0) throw std::range_error(\"Bad dimension\");"
            },
            {
                "type": "warning",
                "file": "main.cpp",
                "line": "284",
                "col": "20",
                "message": "comparing floating point with == or != is unsafe",
                "output": "/tmp/buildservice/bs_7089/main.cpp:284:20: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]         if(eps == -1) {                    ^",
                "code": "if(eps == -1) {"
            },
            {
                "type": "warning",
                "file": "main.cpp",
                "line": "412",
                "col": "16",
                "message": "comparing floating point with == or != is unsafe",
                "output": "/tmp/buildservice/bs_7089/main.cpp:412:16: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]     if(eps == -1) {                ^",
                "code": "if(eps == -1) {"
            },
            {
                "type": "warning",
                "file": "main.cpp",
                "line": "607",
                "col": "17",
                "message": "comparing floating point with == or != is unsafe",
                "output": "/tmp/buildservice/bs_7089/main.cpp:607:17: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]         if(p != k){                 ^/tmp/buildservice/bs_7089/main.cpp: In member function ‘double Matrix::Det() const’:",
                "code": "if(p != k){"
            },
            {
                "type": "warning",
                "file": "main.cpp",
                "line": "631",
                "col": "17",
                "message": "comparing floating point with == or != is unsafe",
                "output": "/tmp/buildservice/bs_7089/main.cpp:631:17: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]         if(p != k){                 ^/tmp/buildservice/bs_7089/main.cpp: In constructor ‘LUDecomposer::LUDecomposer(Matrix)’:",
                "code": "if(p != k){"
            },
            {
                "type": "warning",
                "file": "main.cpp",
                "line": "749",
                "col": "10",
                "message": "'LUDecomposer::m' will be initialized after",
                "output": "/tmp/buildservice/bs_7089/main.cpp:749:10: warning: ‘LUDecomposer::m’ will be initialized after [-Wreorder]   Matrix m;          ^",
                "code": "Matrix m;"
            },
            {
                "type": "warning",
                "file": "main.cpp",
                "line": "748",
                "col": "10",
                "message": "'Vector LUDecomposer::w'",
                "output": "/tmp/buildservice/bs_7089/main.cpp:748:10: warning:   ‘Vector LUDecomposer::w’ [-Wreorder]   Vector w;          ^",
                "code": "Vector w;"
            },
            {
                "type": "warning",
                "file": "main.cpp",
                "line": "751",
                "col": "3",
                "message": "when initialized here",
                "output": "/tmp/buildservice/bs_7089/main.cpp:751:3: warning:   when initialized here [-Wreorder]   LUDecomposer(Matrix m1): m(m1), w(m1.NRows()){   ^~~~~~~~~~~~/tmp/buildservice/bs_7089/main.cpp: In member function ‘void Matrix::ReduceToRREF()’:",
                "code": "LUDecomposer(Matrix m1): m(m1), w(m1.NRows()){"
            },
            {
                "type": "warning",
                "file": "main.cpp",
                "line": "710",
                "col": "32",
                "message": "'p' may be used uninitialized in this function",
                "output": "/tmp/buildservice/bs_7089/main.cpp:710:32: warning: ‘p’ may be used uninitialized in this function [-Wmaybe-uninitialized]         if(p != k) SwapRow(p,k);                                ^",
                "code": "if(p != k) SwapRow(p,k);"
            }
        ]
    },
    "run_result": [],
    "debug_result": [],
    "profile_result": [],
    "test_results": {
        "2": {
            "status": 1,
            "run_result": {
                "output": "'Divisor matrix is not square'\n'Incompatible formats'\n'Divisor matrix is singular'",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "3": {
            "status": 1,
            "run_result": {
                "output": "'Divisor matrix is not square'\n'Incompatible formats'\n'Divisor matrix is singular'",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "4": {
            "status": 1,
            "run_result": {
                "output": "'Division by zero'\n'Division by zero'\n",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "5": {
            "status": 1,
            "run_result": {
                "output": "'Divisor matrix is not square'\n'Incompatible formats'\n'Divisor matrix is singular'",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "6": {
            "status": 1,
            "run_result": {
                "output": "'Divisor matrix is not square'\n'Incompatible formats'\n'Divisor matrix is singular'",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "7": {
            "status": 1,
            "run_result": {
                "output": "'Matrix is not square'\n'Matrix is not square'",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "8": {
            "status": 1,
            "run_result": {
                "output": "'Matrix is not square'\n'Matrix is not square'",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "9": {
            "status": 1,
            "run_result": {
                "output": "'Matrix is singular'\n'Matrix is singular'",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "10": {
            "status": 1,
            "run_result": {
                "output": "'Matrix is not square'\n'Matrix is singular'",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "11": {
            "status": 1,
            "run_result": {
                "output": "'Incompatible formats'\n'Incompatible formats'\n'Incompatible formats'\n'Incompatible formats'",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "12": {
            "status": 1,
            "run_result": {
                "output": "'Incompatible formats'\n'Incompatible formats'\n'Incompatible formats'",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "13": {
            "status": 1,
            "run_result": {
                "output": "'Invalid matrix format'\n'Matrix is singular'",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "14": {
            "status": 1,
            "run_result": {
                "output": "'Matrix is not square'\n'Incompatible formats'\n'Incompatible formats'",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "15": {
            "status": 1,
            "run_result": {
                "output": "'Matrix is not square'\n'Incompatible formats'\n'Incompatible formats'\n'Incompatible formats'",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "16": {
            "status": 1,
            "run_result": {
                "output": "'Incompatible formats'\n'Incompatible formats'",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "17": {
            "status": 1,
            "run_result": {
                "output": "'Incompatible formats'\n'Incompatible formats'",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "18": {
            "status": 1,
            "run_result": {
                "output": "1\n1",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "19": {
            "status": 1,
            "run_result": {
                "output": "1\n1",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "20": {
            "status": 1,
            "run_result": {
                "output": " 0 2 1\n 2 3 1\n 4 3 1\n\n\n 0 2 1\n 2 3 1\n 4 3 1\n",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "21": {
            "status": 1,
            "run_result": {
                "output": "1\n1",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "22": {
            "status": 1,
            "run_result": {
                "output": "1\n1",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "23": {
            "status": 1,
            "run_result": {
                "output": " 1 0 2 6 0 0 7\n 0 1 3 4 0 0 1\n 0 0 0 0 1 0 5\n 0 0 0 0 0 1 3\n 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0\n",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "24": {
            "status": 1,
            "run_result": {
                "output": " 1 4 -2 0 3 0 5 1\n 0 0 0 1 -1 0 2 0\n 0 0 0 0 0 1 -3 2\n",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "25": {
            "status": 1,
            "run_result": {
                "output": "-103\n-103\n20\n20",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "26": {
            "status": 1,
            "run_result": {
                "output": "0\n0",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "27": {
            "status": 1,
            "run_result": {
                "output": "1\n1",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "28": {
            "status": 1,
            "run_result": {
                "output": "1\n1",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "29": {
            "status": 1,
            "run_result": {
                "output": "4\n4",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "30": {
            "status": 1,
            "run_result": {
                "output": "2\n2",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "31": {
            "status": 1,
            "run_result": {
                "output": "1",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "32": {
            "status": 1,
            "run_result": {
                "output": "1",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "33": {
            "status": 1,
            "run_result": {
                "output": "1\n1",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "34": {
            "status": 1,
            "run_result": {
                "output": "1",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "35": {
            "status": 1,
            "run_result": {
                "output": "1",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "36": {
            "status": 1,
            "run_result": {
                "output": "1\n1",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "37": {
            "status": 1,
            "run_result": {
                "output": "3",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "38": {
            "status": 1,
            "run_result": {
                "output": "1",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "39": {
            "status": 1,
            "run_result": {
                "output": "1",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "40": {
            "status": 1,
            "run_result": {
                "output": "1",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "41": {
            "status": 1,
            "run_result": {
                "output": "1",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "42": {
            "status": 1,
            "run_result": {
                "output": "1\n1",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "43": {
            "status": 1,
            "run_result": {
                "output": "1",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "44": {
            "status": 1,
            "run_result": {
                "output": "1",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "45": {
            "status": 1,
            "run_result": {
                "output": "1\n1",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "46": {
            "status": 1,
            "run_result": {
                "output": "1\n1",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "47": {
            "status": 1,
            "run_result": {
                "output": "1",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "48": {
            "status": 1,
            "run_result": {
                "output": "1",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "49": {
            "status": 1,
            "run_result": {
                "output": "1",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "50": {
            "status": 1,
            "run_result": {
                "output": "1",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "51": {
            "status": 1,
            "run_result": {
                "output": "1",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        }
    },
    "queue_items": 0,
    "time": 1574518796
}