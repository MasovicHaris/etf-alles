{
    "id": 5610,
    "name": "Tehnike programiranja (2018\/2019), Zada\u0107a 2, zadatak 3",
    "language": "C++",
    "preferred_compiler": "g++",
    "required_compiler": "g++",
    "compiler_features": [],
    "compiler_options": "-std=c++11 -O1 -Wall -Wuninitialized -Winit-self -Wfloat-equal -Wno-sign-compare -Werror=implicit-function-declaration -Werror=vla -pedantic -lm -pass-exit-codes",
    "compiler_options_debug": "-std=c++11 -ggdb -lm -pass-exit-codes",
    "profile": "true",
    "debug": "true",
    "test": "true",
    "compile": "true",
    "run": "false",
    "test_specifications": [
        {
            "id": 2,
            "require_symbols": [],
            "replace_symbols": [],
            "code": "int blok1[] = { 5, 2, 7, 4, 6, 1, 3, 2, 7, 4 };\nint blok2[] = { 2, 9, 0, 6, 0, 4, 8, 3, 2, 5 };\nint odredisni[10];\nint* kraj = SimetricnaRazlikaBlokova(blok1, blok1+10, blok2, blok2+10, odredisni);\nint* poc = odredisni;\nwhile (poc < kraj)\n    std::cout << *poc++ << \" \";",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "7 1 9 0 8"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3,
            "require_symbols": [],
            "replace_symbols": [],
            "code": "\/\/ Totalno razliciti tipovi\nint blok1[] = { 5, 2, 7, 4, 6, 1, 3, 2, 7, 4 };\nstd::deque<short> blok2 { 4, 2, 18, 18 };\nchar odredisni[10];\nchar* kraj = SimetricnaRazlikaBlokova(blok1, blok1+10, blok2.begin(), blok2.end(), odredisni);\nchar* poc = odredisni;\nwhile (poc < kraj)\n    std::cout << int(*poc++) << \" \";",
            "global_above_main": "#include <deque>",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "5 7 6 1 3 18"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 4,
            "require_symbols": [],
            "replace_symbols": [],
            "code": "\/\/ Niz vs. deque\nint blok1[] = { 5, 2, 7, 4, 6, 1, 3, 2, 7, 4 };\nstd::deque<int> blok2 { 2, 9, 0, 6, 0, 4, 8, 3, 2, 5 };\nint odredisni[10];\nint* kraj = SimetricnaRazlikaBlokova(blok1, blok1+10, blok2.begin(), blok2.end(), odredisni);\nint* poc = odredisni;\nwhile (poc < kraj)\n    std::cout << *poc++ << \" \";",
            "global_above_main": "#include <deque>\n",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "7 1 9 0 8"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 5,
            "require_symbols": [],
            "replace_symbols": [],
            "code": "\/\/ int vs. short vs. char\nint blok1[] = { 5, 2, 7, 4, 6, 1, 3, 2, 7, 4 };\nshort blok2[] = {  4, 2, 18, 18 };\nchar odredisni[10];\nchar* kraj = SimetricnaRazlikaBlokova(blok1, blok1+10, blok2, blok2+4, odredisni);\nchar* poc = odredisni;\nwhile (poc < kraj)\n    std::cout << int(*poc++) << \" \";",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "5 7 6 1 3 18"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 6,
            "require_symbols": [],
            "replace_symbols": [],
            "code": "\/\/ stringovi\nstd::vector<std::string> blok1 { \"a\", \"bb\", \"aaa\", \"bb\", \"cc\" };\nstd::string blok2[] = { \"ddd\", \"c\", \"b\", \"bb\", \"a\" };\nstd::string odredisni[10];\nstd::string* kraj = SimetricnaRazlikaBlokova(blok1.begin(), blok1.end(), blok2, blok2+5, odredisni);\nstd::string* poc = odredisni;\nwhile (poc < kraj)\n    std::cout << *poc++ << \" \";",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "aaa cc ddd c b"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 7,
            "require_symbols": [],
            "replace_symbols": [],
            "code": "\t\n\/\/ Prazni blokovi\nstd::vector<int> blok1;\nstd::vector<int> blok2;\nint odredisni[10];\nint* kraj = SimetricnaRazlikaBlokova(blok1.begin(), blok1.end(), blok2.begin(), blok2.end(), odredisni);\nif (kraj == odredisni) std::cout<<\"PRAZAN\"; \nelse std::cout<<\"NIJE PRAZAN poc=\"<<odredisni<<\" kraj=\"<<kraj;",
            "global_above_main": "#include <vector>\n",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "PRAZAN"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 8,
            "require_symbols": [],
            "replace_symbols": [],
            "code": "\/\/ Drugi blok prazan\nstd::vector<int> blok1 { 1, 2, 3 };\nstd::vector<int> blok2;\nint odredisni[10];\nint* kraj = SimetricnaRazlikaBlokova(blok1.begin(), blok1.end(), blok2.begin(), blok2.end(), odredisni);\nint* poc = odredisni;\nwhile (poc < kraj)\n    std::cout << *poc++ << \" \";\n\n\/\/ Sada cemo zamijeniti blokove\nodredisni[0] = odredisni[1] = odredisni[2] = 0;\nkraj = SimetricnaRazlikaBlokova(blok2.begin(), blok2.end(), blok1.begin(), blok1.end(), odredisni);\npoc = odredisni;\nwhile (poc < kraj)\n    std::cout << *poc++ << \" \";",
            "global_above_main": "#include <vector>\n",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "1 2 3 1 2 3"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 9,
            "require_symbols": [],
            "replace_symbols": [],
            "code": "\/\/ Identicni nizovi\nint blok1[] = { 5, 2, 7, 4, 6, 1, 3, 2, 7, 4 };\nint blok2[] = { 5, 2, 7, 4, 6, 1, 3, 2, 7, 4 };\nint odredisni[10];\nint* kraj = SimetricnaRazlikaBlokova(blok1, blok1+10, blok2, blok2+10, odredisni);\nif (kraj == odredisni) std::cout<<\"PRAZAN\"; \nelse std::cout<<\"NIJE PRAZAN poc=\"<<odredisni<<\" kraj=\"<<kraj;",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "PRAZAN"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 10,
            "require_symbols": [],
            "replace_symbols": [],
            "code": "\t\n\/\/ Svi elementi razliciti\nint blok1[] = { 1, 2, 3, 4, 5 };\nint blok2[] = { 6, 7, 8, 9, 10 };\nint odredisni[10];\nint* kraj = SimetricnaRazlikaBlokova(blok1, blok1+5, blok2, blok2+5, odredisni);\nint* poc = odredisni;\nwhile (poc < kraj)\n    std::cout << *poc++ << \" \";",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "1 2 3 4 5 6 7 8 9 10"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 11,
            "require_symbols": [],
            "replace_symbols": [],
            "code": "_main();",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": "5\n1 2 3 4 5\n5\n5 6 7 8 9"
            },
            "expected": [
                "Unesite broj elemenata niza\\nUnesite elemente niza\\nUnesite broj elemenata deka\\nUnesite elemente deka\\nSimetricna razlika blokova je: 1 2 3 4 6 7 8 9"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 12,
            "require_symbols": [],
            "replace_symbols": [],
            "code": "_main();",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": "3\n2 2 3\n4\n1 3 4 100"
            },
            "expected": [
                "Unesite broj elemenata niza\\nUnesite elemente niza\\nUnesite broj elemenata deka\\nUnesite elemente deka\\nSimetricna razlika blokova je: 2 1 4 100"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 13,
            "require_symbols": [],
            "replace_symbols": [],
            "code": "_main();",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": "3\n1 2 3\n3\n1 2 3"
            },
            "expected": [
                "Unesite broj elemenata niza\\nUnesite elemente niza\\nUnesite broj elemenata deka\\nUnesite elemente deka\\nBlokovi nemaju simetricnu razliku"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        }
    ]
}