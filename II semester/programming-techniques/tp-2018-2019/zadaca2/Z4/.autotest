{
    "id": 303403,
    "name": "Tehnike programiranja (2014\/2015), Zada\u0107a 2, zadatak 3",
    "language": "C++",
    "required_compiler": "g++",
    "preferred_compiler": "g++",
    "compiler_features": [],
    "compiler_options": "-std=c++11 -O1 -Wall -Wuninitialized -Winit-self -Wfloat-equal -Wno-sign-compare -Werror=implicit-function-declaration -Werror=vla -pedantic -lm -pass-exit-codes",
    "compiler_options_debug": "-std=c++11 -ggdb -lm -pass-exit-codes",
    "compile": "true",
    "run": "false",
    "test": "true",
    "debug": "true",
    "profile": "true",
    "test_specifications": [
        {
            "id": 2420,
            "require_symbols": [],
            "replace_symbols": [],
            "code": "long long int** p = StirlingoviBrojeviV1(5);\nfor (int i(0); i<=5; i++) {\n    for (int j(0); j<=i; j++)\n        std::cout << p[i][j] << \" \";\n    std::cout << std::endl;\n}\n\n\/\/ Oslobadjanje memorije za fragmentiranu alokaciju\nfor (int i(0); i<=5; i++)\n    delete[] p[i];\ndelete[] p;",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "1 \\n0 1 \\n0 1 1 \\n0 1 3 1 \\n0 1 7 6 1 \\n0 1 15 25 10 1 \\n"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 2421,
            "require_symbols": [],
            "replace_symbols": [],
            "code": "long long int** p = StirlingoviBrojeviV2(5);\nfor (int i(0); i<=5; i++) {\n    for (int j(0); j<=i; j++)\n        std::cout << p[i][j] << \" \";\n    std::cout << std::endl;\n}\n\n\/\/ Oslobadjanje memorije za kontinualnu alokaciju\ndelete[] p[0];\ndelete[] p;",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "1 \\n0 1 \\n0 1 1 \\n0 1 3 1 \\n0 1 7 6 1 \\n0 1 15 25 10 1 \\n"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 2422,
            "require_symbols": [],
            "replace_symbols": [],
            "code": "try {\n    long long** ago = StirlingoviBrojeviV2(-1);\n    std::cout << \"Ovo se ne smije ispisati\" << std::endl;\n} catch(std::domain_error e) {\n    std::cout << \"Domain error: \"<<e.what() << std::endl;\n} catch(...) {\n    std::cout << \"Ni ovo se ne smije ispisati\" << std::endl;\n}",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "Domain error: Parametar ne smije biti negativan"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 2423,
            "require_symbols": [],
            "replace_symbols": [],
            "code": "try {\n    long long** ago = StirlingoviBrojeviV1(10000);\n    std::cout << \"Ovo se ne smije ispisati\" << std::endl;\n} catch(std::range_error e) {\n    std::cout << \"Range error: \"<<e.what() << std::endl;\n} catch(...) {\n    std::cout << \"Ni ovo se ne smije ispisati\" << std::endl;\n}\n\ntotalAlloc=0;\ntry {\n    long long** ago = StirlingoviBrojeviV2(10000);\n    std::cout << \"Ovo se ne smije ispisati\" << std::endl;\n} catch(std::range_error e) {\n    std::cout << \"Range error: \"<<e.what() << std::endl;\n} catch(...) {\n    std::cout << \"Ni ovo se ne smije ispisati\" << std::endl;\n}",
            "global_above_main": "#include <new>\n#include <cstdlib>\nconst int memorija(5000);\nstatic int totalAlloc;\nvoid *operator new[] ( size_t size )\n{\n    totalAlloc += size;\n    if (totalAlloc > memorija) {\n        std::bad_alloc e;\n        throw e;\n    }\n\n    return std::malloc( size );\n}\n\nvoid operator delete[](void* pok) {\n    std::free(pok);\n}",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "Range error: Parametar prevelik za raspolozivu memoriju\\nRange error: Parametar prevelik za raspolozivu memoriju",
                "Range error: Parametar prevelik za raspolo\u017eivu memoriju\\nRange error: Parametar prevelik za raspolo\u017eivu memoriju"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 2424,
            "require_symbols": [],
            "replace_symbols": [],
            "code": "\/\/ Test maina\n_main();",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": "3\n"
            },
            "expected": [
                "1 \\n0 1 \\n0 1 1 \\n0 1 3 1"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "true",
            "regex": "false",
            "substring": "true"
        }
    ]
}