{
    "id": 8602,
    "name": "Tehnike programiranja (2016\/2017), Tutorijal 10, Zadatak 2",
    "language": "C++",
    "required_compiler": "g++",
    "preferred_compiler": "g++",
    "compiler_features": [

    ],
    "compiler_options": "-std=c++11 -O1 -Wall -Wuninitialized -Winit-self -Wfloat-equal -Wno-sign-compare -Werror=implicit-function-declaration -Werror=vla -pedantic -lm -pass-exit-codes",
    "compiler_options_debug": "-std=c++11 -ggdb -lm -pass-exit-codes",
    "compile": "true",
    "run": "false",
    "test": "true",
    "debug": "true",
    "profile": "true",
    "test_specifications": [
        {
            "id": 3630,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/AT1: Testiranje da li je konstruktor eksplicitan\n\nstd::cout << std::boolalpha                                     \n    << std::is_default_constructible<Krug>::value << \" \"          \n    << std::is_default_constructible<Valjak>::value << \" \"         \n    << std::is_convertible<int, Krug>::value << std::endl; ",
            "global_above_main": "#include <type_traits> ",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "false false false"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3631,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/AT2: Testiranje izuzetka: postavljanje negativne vrijednosti visine valjka\n\n#define TestirajIzuzetak(izuzetak, tijelo) \\\ntry tijelo catch(izuzetak e) { std::cout << e.what() << std::endl; }\n\nTestirajIzuzetak(std::domain_error, { Valjak v(1, -5); });",
            "global_above_main": "#include <stdexcept>",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "Neispravna visina"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3632,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/AT3: Testiranje izuzetka: postavljanje negativne vrijednosti poluprecnika (i visine)\n\n#define TestirajIzuzetak(izuzetak, tijelo) \\\ntry tijelo catch(izuzetak e) { std::cout << e.what() << std::endl; }\n\nTestirajIzuzetak(std::domain_error, { Valjak v(-1,2); });\nTestirajIzuzetak(std::domain_error, { Valjak v(-1,-2); });",
            "global_above_main": "#include <stdexcept>",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "Neispravan poluprecnik\\nNeispravan poluprecnik"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3633,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/AT4: Testiranje izuzetka: postavljanje negativne vrijednosti poluprecnika Kruga\n\n#define TestirajIzuzetak(izuzetak, tijelo) \\\ntry tijelo catch(izuzetak e) { std::cout << e.what() << std::endl; }\n\nTestirajIzuzetak(std::domain_error, { Krug k(-1); });",
            "global_above_main": "#include <stdexcept>",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "Neispravan poluprecnik"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3634,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/AT5: Testiranje izuzetka u metodi Postavi za klasu Krug\n\n#define TestirajIzuzetak(izuzetak, tijelo) \\\ntry tijelo catch(izuzetak e) { std::cout << e.what() << std::endl; }\n\nKrug k(5);\n\nTestirajIzuzetak(std::domain_error, { k.Postavi(0); });\nTestirajIzuzetak(std::domain_error, { k.Postavi(-15); });\nTestirajIzuzetak(std::domain_error, { k.Postavi(-0.25); });",
            "global_above_main": "#include <stdexcept>",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "Neispravan poluprecnik\\nNeispravan poluprecnik\\nNeispravan poluprecnik"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3635,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/AT6: Testiranje izuzetka u metodi Postavi za klasu Valjak\n\n#define TestirajIzuzetak(izuzetak, tijelo) \\\ntry tijelo catch(izuzetak e) { std::cout << e.what() << std::endl; }\n\nValjak v(1,1);\n\nTestirajIzuzetak(std::domain_error, { v.Postavi(0,0); });\nTestirajIzuzetak(std::domain_error, { v.Postavi(-15,5); });\nTestirajIzuzetak(std::domain_error, { v.Postavi(-0.25,0); });\nTestirajIzuzetak(std::domain_error, { v.Postavi(5,-5); });",
            "global_above_main": "#include <stdexcept>",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "Neispravan poluprecnik\\nNeispravan poluprecnik\\nNeispravan poluprecnik\\nNeispravna visina"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3636,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/AT7: Testiranje izuzetka u metodi Skaliraj za klase Valjak i Krug\n\n#define TestirajIzuzetak(izuzetak, tijelo) \\\ntry tijelo catch(izuzetak e) { std::cout << e.what() << std::endl; }\n\nValjak v(1,1);\nKrug k(8);\nTestirajIzuzetak(std::domain_error, { v.Skaliraj(-1); });\nTestirajIzuzetak(std::domain_error, { k.Skaliraj(-1); });",
            "global_above_main": "#include <stdexcept>",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "Neispravan faktor skaliranja\\nNeispravan faktor skaliranja"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3637,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/AT8: Testiranje metoda DajPoluprecnik, DajObim i DajPovrsinu za klasu Krug\n\nKrug k1(1);\nstd::cout<<std::fixed<<std::setprecision(5)<<k1.DajPoluprecnik() << \" \"\n<<std::fixed<<std::setprecision(5)<< k1.DajObim() << \" \"\n<<std::fixed<<std::setprecision(5)<< k1.DajPovrsinu()<< std::endl;\n\nKrug k2(std::sqrt(2));\n\nstd::cout <<std::fixed<<std::setprecision(5)<<k2.DajPoluprecnik() << \" \" \n<<std::fixed<<std::setprecision(5)<<k2.DajObim() << \" \"\n<<std::fixed<<std::setprecision(5)<<k2.DajPovrsinu()<< std::endl;",
            "global_above_main": "#include <cmath>\n#include <iomanip>",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "1.00000 6.28319 3.14159\\n1.41421 8.88577 6.28319"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3640,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/AT9: Testiranje metoda DajPoluprecnikBaze, DajVisinu, DajPovrsinu i DajZapreminu za klasu Valjak\n\nValjak v(2, 2);\n  std::cout <<std::fixed<<std::setprecision(3) <<v.DajPoluprecnikBaze() << \" \" \n<<std::fixed<<std::setprecision(3) << v.DajVisinu() << \" \"\n<<std::fixed<<std::setprecision(3) << v.DajPovrsinu() << \" \"\n<<std::fixed<<std::setprecision(3) << v.DajZapreminu() << std::endl;",
            "global_above_main": "#include <iomanip>",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "2.000 2.000 50.265 25.133"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3641,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/AT10: Testiranje metoda DajBazu, DajPoluprecnik i DajPoluprecnikBaze za klasu Valjak\n\nValjak v(std::sqrt(2), std::sqrt(3));\n\nstd::cout << std::fixed<<std::setprecision(3)<<v.DajBazu().DajPoluprecnik() << std::endl;\nstd::cout << std::fixed<<std::setprecision(3)<<v.DajPoluprecnikBaze() << std::endl;",
            "global_above_main": "#include <iomanip>",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "1.414\\n1.414"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3642,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/AT11: Testiranje metode Ispisi za klase Krug i Valjak\n\/\/NAPOMENA: zbog nepreciznosti realne aritmetike ispis zaokruzite (fiksirano) na 5 decimala\n\nKrug k(5);\nk.Ispisi(); std::cout << std::endl;\nValjak v1(1, 9);\nv1.Ispisi(); std::cout << std::endl;\nv1.DajBazu().Ispisi(); std::cout << std::endl;\nValjak v2(k.DajPoluprecnik(),8);\nv2.DajBazu().Ispisi(); std::cout << std::endl;\n",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "R=5 O=31.41593 P=78.53982\\nR=1.00000 H=9.00000 P=62.83185 V=28.27433\\nR=1.00000 O=6.28319 P=3.14159\\nR=5.00000 O=31.41593 P=78.53982",
                "R=5 O=31.41593 P=78.53982\\nR=1 H=9.00000 P=62.83185 V=28.27433\\nR=1 O=6.28319 P=3.14159\\nR=5 O=31.41593 P=78.53982"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3643,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/AT12: Testiranje inspektora\n\/\/NAPOMENA: zbog nepreciznosti realne aritmetike ispis zaokruzite (fiksirano) na 5 decimala\n\nKrug k1(5);\nValjak v1(1,9);\nconst Krug k2(k1);                          \nconst Valjak v2(v1);\nk2.Ispisi(); std::cout << std::endl;\nv2.Ispisi(); std::cout << std::endl;",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "R=5 O=31.41593 P=78.53982\\nR=1.00000 H=9.00000 P=62.83185 V=28.27433",
                "R=5 O=31.41593 P=78.53982\\nR=1 H=9 P=62.83185 V=12.14159"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3644,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/AT13: Testiranje metode Postavi za klase Krug i Valjak\n\nKrug k(5);\nk.Postavi(10);\nValjak v(5,5);\nv.Postavi(10,10);\nstd::cout<<k.DajPoluprecnik()<<std::endl;\nstd::cout<<v.DajBazu().DajPoluprecnik();",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "10\\n10"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3645,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/AT14: Testiranje metode Skaliraj za klase Krug i Valjak\n\nKrug k(5);\nk.Skaliraj(10);\nValjak v(5,5);\nv.Skaliraj(10);\nstd::cout<<k.DajPoluprecnik()<<std::endl;\nstd::cout<<v.DajBazu().DajPoluprecnik()<<std::endl;",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "50\\n50"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        }
    ]
}