{
    "id": 8563,
    "name": "Tehnike programiranja (2016\/2017), Tutorijal 6, Zadatak 3",
    "language": "C++",
    "required_compiler": "g++",
    "preferred_compiler": "g++",
    "compiler_features": [

    ],
    "compiler_options": "-std=c++11 -O1 -Wall -Wuninitialized -Winit-self -Wfloat-equal -Wno-sign-compare -Werror=implicit-function-declaration -Werror=vla -pedantic -lm -pass-exit-codes",
    "compiler_options_debug": "-std=c++11 -ggdb -lm -pass-exit-codes",
    "compile": "true",
    "run": "false",
    "test": "true",
    "debug": "true",
    "profile": "true",
    "test_specifications": [
        {
            "id": 3402,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/ AT1 testiranje na negativan broj redova\n_main();",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": "-3"
            },
            "expected": [
                "Koliko zelite redova: Izuzetak: Broj redova mora biti pozitivan"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3403,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/ AT2 testiranje na broj redova jednak nuli\n_main();",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": "0"
            },
            "expected": [
                "Koliko zelite redova: Izuzetak: Broj redova mora biti pozitivan"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3404,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/ AT3 testiranje funkcije na broj redova jednak jedan\n_main();",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": "1"
            },
            "expected": [
                "Koliko zelite redova: 1 "
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3405,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/AT4 testiranje na broj redova jednak 5\n_main();",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": "5"
            },
            "expected": [
                "Koliko zelite redova: 1 \\n2 1 2 \\n3 2 1 2 3 \\n4 3 2 1 2 3 4 \\n5 4 3 2 1 2 3 4 5 "
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3406,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/ AT5 testiranje neuspje\u0161nog alociranja memorije\n_main();",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": "1000000"
            },
            "expected": [
                "Koliko zelite redova: Izuzetak: Nedovoljno memorije!"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3407,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/AT 6 direktno testiranje funkcije na poslan broj redova jednak nuli\ntry {\n    int **m(KreirajTrougao(0));\n  }\n  catch(std::domain_error e) {\n    std::cout << \"Izuzetak: \" << e.what();\n  }\n  catch(...) {\n    std::cout << \"Pogre\u0161an izuzetak!\";\n  }",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "Izuzetak: Broj redova mora biti pozitivan"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3432,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/ AT7 provjera da li se alocira vi\u0161e memorije nego \u0161to treba\n\n try {\n    int **m(KreirajTrougao(5));\n    for(int i = 0; i < 5; i++) {\n      for(int j = 0; j < 2 * i + 1; j++) std::cout << m[i][j] << \" \";\n      std::cout << std::endl;\n    }\n    for(int i = 0; i < 5; i++) delete[] m[i];\n    delete[] m;\n    std::cout << \"New pozvan \" << brojac_new << \" puta,  delete [] pozvan \" << brojac_deleteniz << \" puta, a alocirano ukupno \" << alocirano << \" bajta i to redom: \";\n    for (int i=0; i<brojac_new;i++) std::cout << alokacije[i] << \" \";\n  }\n    catch(std::domain_error e) {\n    std::cout << \"Izuzetak: \" << e.what();\n  }\n  catch(std::bad_alloc) {\n    std::cout << \"Izuzetak: Nedovoljno memorije!\";\n  }",
            "global_above_main": "#include <vector>\n\nstatic size_t alocirano(0);\nstatic int brojac_new(0);\nstatic int brojac_deleteniz(0);\nstatic size_t alokacije[20];\nconst size_t RAM = 35 * sizeof(int);\n\nvoid *operator new[] (size_t vel)\n{\n    if (RAM < alocirano+vel) throw std::bad_alloc();\n    alokacije[brojac_new]=vel;    \n    brojac_new++;\n    alocirano+=vel;   \n    return std::malloc (vel);\n}\n\nvoid operator delete [] ( void* ptr) {\n  brojac_deleteniz++;\n  free(ptr);\n}",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "1 \\n2 1 2 \\n3 2 1 2 3 \\n4 3 2 1 2 3 4 \\n5 4 3 2 1 2 3 4 5 \\nNew pozvan 6 puta,  delete [] pozvan 6 puta, a alocirano ukupno 140 bajta i to redom: 40 4 12 20 28 36",
                "1 \\n2 1 2 \\n3 2 1 2 3 \\n4 3 2 1 2 3 4 \\n5 4 3 2 1 2 3 4 5 \\nNew pozvan 6 puta,  delete [] pozvan 6 puta, a alocirano ukupno 120 bajta i to redom: 20 4 12 20 28 36"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3440,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/ AT8 provjera da li je pravilno alocirano\n try {\n    int **m(KreirajTrougao(4));\n    for(int i = 0; i < 4; i++) {\n      for(int j = 0; j < 2 * i + 1; j++) std::cout << m[i][j] << \" \";\n      std::cout << std::endl;\n    }\n    for(int i = 0; i < 4; i++) delete[] m[i];\n    delete[] m;\n    std::cout << \"New pozvan \" << brojac_new << \" puta,  delete [] pozvan \" << brojac_deleteniz << \" puta, a alocirano ukupno \" << alocirano << \" bajta i to redom: \";\n    for (int i=0; i<brojac_new;i++) std::cout << alokacije[i] << \" \";\n  }\n    catch(std::domain_error e) {\n    std::cout << \"Izuzetak: \" << e.what();\n  }\n  catch(std::bad_alloc) {\n    std::cout << \"Izuzetak: Nedovoljno memorije!\";\n  }",
            "global_above_main": "#include <vector>\n\nstatic size_t alocirano(0);\nstatic int brojac_new(0);\nstatic int brojac_deleteniz(0);\nstatic size_t alokacije[20];\n\nvoid *operator new[] (size_t vel)\n{\n    alokacije[brojac_new]=vel;\n    brojac_new++;\n    alocirano+=vel;   \n    return std::malloc (vel);\n}\n\nvoid operator delete [] ( void* ptr) {\n  brojac_deleteniz++;\n  free(ptr);\n}",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "1 \\n2 1 2 \\n3 2 1 2 3 \\n4 3 2 1 2 3 4 \\nNew pozvan 5 puta,  delete [] pozvan 5 puta, a alocirano ukupno 96 bajta i to redom: 32 4 12 20 28 ",
                "1 \\n2 1 2 \\n3 2 1 2 3 \\n4 3 2 1 2 3 4 \\nNew pozvan 5 puta,  delete [] pozvan 5 puta, a alocirano ukupno 84 bajta i to redom: 12 4 12 20 28 "
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3442,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/ AT9 provjera da li se pravilno po\u010disti sme\u0107e ako alokacije ne uspije\n try {\n    int **m(KreirajTrougao(6));\n    for(int i = 0; i < 6; i++) {\n      for(int j = 0; j < 2 * i + 1; j++) std::cout << m[i][j] << \" \";\n      std::cout << std::endl;\n    }\n    for(int i = 0; i < 6; i++) delete[] m[i];\n    delete[] m;\n    std::cout << \"New pozvan \" << brojac_new << \" puta,  delete [] pozvan \" << brojac_deleteniz << \" puta, a alocirano ukupno \" << alocirano << \" bajta i to redom: \";\n    for (int i=0; i<brojac_new;i++) std::cout << alokacije[i] << \" \";\n  }\n    catch(std::domain_error e) {\n    std::cout << \"Izuzetak: \" << e.what();\n  }\n  catch(std::bad_alloc) {\nstd::cout << \"New pozvan \" << brojac_new << \" puta,  delete [] pozvan \" << brojac_deleteniz << \" puta, a alocirano ukupno \" << alocirano << \" bajta i to redom: \";\n    for (int i=0; i<brojac_new;i++) std::cout << alokacije[i] << \" \";\n    std::cout << \"Izuzetak: Nedovoljno memorije!\";\n  }",
            "global_above_main": "#include <vector>\nstatic size_t alokacije[20];\nstatic size_t alocirano(0);\nstatic int brojac_new(0);\nstatic int brojac_deleteniz(0);\nconst size_t RAM = 35 * sizeof(int);\n\nvoid *operator new[] (size_t vel)\n{\n    if (RAM < alocirano+vel) throw std::bad_alloc();\n    alokacije[brojac_new]=vel;\n    brojac_new++;\n    alocirano+=vel;   \n    return std::malloc (vel);\n}\n\nvoid operator delete [] ( void* ptr) {\n  brojac_deleteniz++;\n  free(ptr);\n}",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "New pozvan 5 puta,  delete [] pozvan 5 puta, a alocirano ukupno 112 bajta i to redom: 48 4 12 20 28 Izuzetak: Nedovoljno memorije!",
                "New pozvan 5 puta,  delete [] pozvan 5 puta, a alocirano ukupno 88 bajta i to redom: 24 4 12 20 28 Izuzetak: Nedovoljno memorije!\\n"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        }
    ]
}