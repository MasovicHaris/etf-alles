{
    "id": 8594,
    "name": "Tehnike programiranja (2016\/2017), Tutorijal 9, Zadatak 4",
    "language": "C++",
    "required_compiler": "g++",
    "preferred_compiler": "g++",
    "compiler_features": [

    ],
    "compiler_options": "-std=c++11 -O1 -Wall -Wuninitialized -Winit-self -Wfloat-equal -Wno-sign-compare -Werror=implicit-function-declaration -Werror=vla -pedantic -lm -pass-exit-codes",
    "compiler_options_debug": "-std=c++11 -ggdb -lm -pass-exit-codes",
    "compile": "true",
    "run": "false",
    "test": "true",
    "debug": "true",
    "profile": "true",
    "test_specifications": [
        {
            "id": 3570,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/Da li je ispravna metoda DaLiJeIspravno\n\nstd::cout << Sat::DaLiJeIspravno(10,15,30) << std::endl;\n  \nstd::cout << Sat::DaLiJeIspravno(-10,15,30) << std::endl;\nstd::cout << Sat::DaLiJeIspravno(10,-15,30) << std::endl;\nstd::cout << Sat::DaLiJeIspravno(10,15,-30) << std::endl;\n  \nstd::cout << Sat::DaLiJeIspravno(50,15,30) << std::endl;\nstd::cout << Sat::DaLiJeIspravno(10,105,30) << std::endl;\nstd::cout << Sat::DaLiJeIspravno(10,15,300) << std::endl;",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "1\\n0\\n0\\n0\\n0\\n0\\n0"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3571,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/Testiranje metoda Postavi i Ispisi\n\n  Sat s;\n  s.Postavi(10,15,30);\n  s.Ispisi();\n  std::cout << std::endl;\n  s.Postavi(0,4,3);\n  s.Ispisi();",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "10:15:30\\n00:04:03"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3572,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/Testiranje neispravnog unosa u metodi Postavi\n\n  Sat s;\n  try{\n    s.Postavi(-10,15,30);\n  }\n  catch(...){\n    std::cout << \"OK\" << std::endl;\n  }\n  try{\n    s.Postavi(10,-15,30);\n  }\n  catch(...){\n    std::cout << \"OK\" << std::endl;\n  }\n  try{\n    s.Postavi(10,15,-30);\n  }\n  catch(...){\n    std::cout << \"OK\" << std::endl;\n  }\n\n  try{\n    s.Postavi(50,15,30);\n  }\n  catch(...){\n    std::cout << \"OK\" << std::endl;\n  }\n  try{\n    s.Postavi(10,105,30);\n  }\n  catch(...){\n    std::cout << \"OK\" << std::endl;\n  }\n  try{\n    s.Postavi(10,15,300);\n  }\n  catch(...){\n    std::cout << \"OK\" << std::endl;\n  }",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "OK\\nOK\\nOK\\nOK\\nOK\\nOK"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3573,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/Testiranje metode PostaviNormalizirano\n\n  Sat s;\n  s.PostaviNormalizirano(-2, 3, 10);\n  s.Ispisi(); std::cout << std::endl;\n  s.PostaviNormalizirano(15, -30, 0);\n  s.Ispisi(); std::cout << std::endl;\n  s.PostaviNormalizirano(20, 30, -15);\n  s.Ispisi(); std::cout << std::endl;\n  \n  s.PostaviNormalizirano(30, 10, 15);\n  s.Ispisi(); std::cout << std::endl;\n  s.PostaviNormalizirano(20, 70, 15);\n  s.Ispisi(); std::cout << std::endl;\n  s.PostaviNormalizirano(20, 10, 360);\n  s.Ispisi(); std::cout << std::endl;\n  \n  s.PostaviNormalizirano(-1234, 1234, 2134);\n  s.Ispisi();",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "22:03:10\\n14:30:00\\n20:29:45\\n06:10:15\\n21:10:15\\n20:16:00\\n11:09:34"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3574,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/Testiranje metode Sljedeci\n\n  Sat s;\n  s.Postavi(10,10,10);\n  s.Sljedeci().Ispisi();\n  std::cout << std::endl;\n  s.Sljedeci().Sljedeci().Ispisi();\n  std::cout << std::endl;\n  \n  s.Postavi(23,59,59);\n  s.Sljedeci().Ispisi(); std::cout << std::endl;\n  s.Postavi(10,59,59);\n  s.Sljedeci().Ispisi(); std::cout << std::endl;\n  s.Postavi(10,10,59);\n  s.Sljedeci().Ispisi(); std::cout << std::endl;",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "10:10:11\\n10:10:13\\n00:00:00\\n11:00:00\\n10:11:00"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3575,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/Testiranje metode Prethodni\n\n  Sat s;\n  s.Postavi(10,10,10);\n  s.Prethodni().Ispisi();\n  std::cout << std::endl;\n  s.Prethodni().Prethodni().Ispisi();\n  std::cout << std::endl;\n  \n  s.Postavi(0,0,0);\n  s.Prethodni().Ispisi(); std::cout << std::endl;\n  s.Postavi(10,0,0);\n  s.Prethodni().Ispisi(); std::cout << std::endl;\n  s.Postavi(10,10,0);\n  s.Prethodni().Ispisi(); std::cout << std::endl;",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "10:10:09\\n10:10:07\\n23:59:59\\n09:59:59\\n10:09:59"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3576,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/Testiranje metode PomjeriZa\n\n  Sat s;\n  s.Postavi(10,10,10);\n  s.PomjeriZa(5).Ispisi(); std::cout << std::endl;\n  s.PomjeriZa(-5).Ispisi(); std::cout << std::endl;\n  s.PomjeriZa(100).PomjeriZa(-100).Ispisi(); std::cout << std::endl;\n  \n  s.Postavi(23,59,59);\n  s.PomjeriZa(5).Ispisi(); std::cout << std::endl;\n  s.Postavi(10,59,59);\n  s.PomjeriZa(5).Ispisi(); std::cout << std::endl;\n  s.Postavi(10,10,59);\n  s.PomjeriZa(5).Ispisi(); std::cout << std::endl;\n  \n  s.Postavi(0,0,0);\n  s.PomjeriZa(-5).Ispisi(); std::cout << std::endl;\n  s.Postavi(10,0,0);\n  s.PomjeriZa(-5).Ispisi(); std::cout << std::endl;\n  s.Postavi(10,10,0);\n  s.PomjeriZa(-5).Ispisi();",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "10:10:15\\n10:10:10\\n10:10:10\\n00:00:04\\n11:00:04\\n10:11:04\\n23:59:55\\n09:59:55\\n10:09:55"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3577,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/Testiranje metoda DajSate, DajMinute i DajSekunde\n\n  Sat s;\n  s.Postavi(10,10,10);\n  std::cout << s.DajSate() << \" \"\n            << s.DajMinute() << \" \"\n            << s.DajSekunde();",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "10 10 10"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3578,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/Testiranje BrojSekundiIzmedju i Razmak\n\n  Sat s1, s2;\n  s1.Postavi(10,10,10);\n  s2.Postavi(10,10,15);\n  std::cout << BrojSekundiIzmedju(s2, s1) << \" \"\n            << Sat::Razmak(s2, s1) << std::endl;\n  std::cout << BrojSekundiIzmedju(s1, s2) << \" \"\n            << Sat::Razmak(s1, s2) << std::endl;\n            \n  s1.Postavi(13, 0, 0);\n  s2.Postavi(15, 30, 3);\n  std::cout << BrojSekundiIzmedju(s2, s1) << \" \"\n            << Sat::Razmak(s2, s1) << std::endl;\n  std::cout << BrojSekundiIzmedju(s1, s2) << \" \"\n            << Sat::Razmak(s1, s2);",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "5 5\\n-5 -5\\n9003 9003\\n-9003 -9003"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3579,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/Testiranje da li su odgovarajuce metode const\n\n  Sat s;\n  s.Postavi(10,10,10);\n  const Sat sConst(s);\n  std::cout << sConst.DajSate() << \" \"\n            << sConst.DajMinute() << \" \"\n            << sConst.DajSekunde() << std::endl;\n            \n  sConst.Ispisi();",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "10 10 10\\n10:10:10"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3580,
            "require_symbols": [

            ],
            "replace_symbols": [

            ],
            "code": "\/\/Testiranje da li klasa Sat sadr\u017ei tri atributa, sati, minute i sekunde.\n\/\/Napomena: Ako ovaj test pada dobija se 0 bodova na zadatak.\n\n  Sat s;\n  std::cout << sizeof(s);",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "12"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        }
    ]
}